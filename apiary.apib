FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Wo-man

Polls is a simple API allowing consumers to view polls and vote in them.

## Order Collection [/order]

### List All Order [GET]

+ Response 200 (application/json)

    + Attributes(OrderPager)

## User Order Collection / Cart Items [/user/{id}/order]

+ Parameters
    + id (required, number, `1`) - User ID or me

### List all orders of the user [GET]

+ Response 200 (application/json)

    + Attributes(OrderPager)

## Get Order details [/order/{id}]

### Get the order [GET]

+ Response 200 (application/json)

    + Attributes(Order)

## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }


# Data Structures

## OrderPager (object)

+ total: 4 (number)
+ per_page: 15 (number)
+ current_page: 1 (number)
+ last_page: 1 (number)
+ from: 1 (number)
+ to: 2 (number)
+ data: Order, Order, Order, Order (array[Order])

## User (object)

+ id: 11212 (number)
+ first_name: `Teszt` (string)
+ last_name: `Elek` (string)
+ email: `elek.teszt@example.org` (string)

## ProductOption (object)

+ id: 111 (number)
+ slug: `size` (string)
+ title: `Size` (string)
+ value: `42` (string)

## OrderItemUnit (object)

+ id: 111 (number)
+ title: `Air Max` (string)
+ options: ProductOption (array[ProductOption]) 

## OrderItem (object)

+ id: 11212 (number)
+ title: `Air Max` (string)
+ quantity: 2 (number)
+ units: OrderItemUnit, OrderItemUnit (array[OrderItemUnit])

## Order (object)

+ id: 11212 (number)
+ user 
    + Include User
+ items: OrderItem, OrderItem, OrderItem (array[OrderItem])
+ status: `cart` (string)



















+ created_at: "2017-01-01 12:12:12" (datetime)