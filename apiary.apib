FORMAT: 1A
HOST: http://private-3ab833-womanshop.apiary-mock.com

# Wo-man

- Minden http request `Content-type: application/json`-t küld és fogad, kivéve, ha mást írunk lentebb
- Minden API endpoint standard http headerekkel és http hibakódokkal dolgozik
- Ha a kliensnek van auth tokene (azaz “be van jelentkezve”), akkor minden további http requesthez csatolnia kell egy `Authorization: Bearer <auth token>` headert

## Authentication [/auth]

### Login [POST /auth/login]

Bejelentkezni email cimmel es jelszoval vagy social auth segítségével.

Ez az endpoint sikeres bejelentkezés esetén egy JWT tokent ( https://jwt.io ) ad vissza. A token a következőket tartalmazza:

```
{
    "roles": [], //array of strings, másolat a belépett user entity `roles` mezőjéről
    "sub": 2, //string/int user unique id
    "iss": "http://wo-man.dev/v1/auth/login", //string token származási helye
    "iat": 1464959200, //int unix timestamp, token létrehozásának időpontja
    "exp": 1464962800, //int unix timestamp, token lejáratának időpontja
    "nbf": 1464959200, //int unix timestamp, token érvényesség kezdetének időpontja
    "jti": "45ac5cd03267ce11158177ec61c1bbc5" //string token unique id
 }
```

+ Request (application/json)

    + Body
    
            {
                "email": "example@gmail.com",
                "password": "example1234"
            }

+ Response 200 (application/json)

    + Body

            {
                "token": "auth token"
            }

### Reset password [POST /auth/password/reset]

+ Request (application/json)

    + Body
    
            {
                "email": "example@gmail.com"
            }

+ Response 200 (application/json)

### Confirm code [POST /auth/password/confirm]

+ Request (application/json)

    + Body
    
            {
                "token": "1234",
                "password": "new password",
                "email": "example@gmail.com"
            }

+ Response 200 (application/json)

### Refresh token [POST /auth/token]

Élő, még nem lejárt token lecserélése egy új tokenre. - csak bejelentkezve!

+ Response 200 (application/json)

    + Attributes
    
        + token: `valid token` (string)
    

## Social Authentication [/auth/{provider}]

+ Parameters
    + provider (required, string, `facebook`) - facebook or google

### Connect [POST]

Amennyiben nem letezik a rendszerünkben a megfelelő user account, az API létrehozza.
Amennyiben a felhasználónak még el kell fogadnia a terms and conditions-t (mert még nem regisztrált, vagy mert új terms van amit újra el kell fogadnia), akkor ez elsőre failelni fog 401-gyel, és csak a megfelelő paraméterek küldése mellett fogunk tudni tovább haladni.

+ Request (application/json)
        
    + Attributes

        + token: `facebook auth token` (required, string)
            
+ Response 401 (application/json)

    + Attributes
        
        + `terms_accepted`: false (boolean) - a felhasználó elfogadta-e a terms and conditions-t

+ Request (application/json)
        
    + Attributes
    
        + token: `facebook auth token` (required, string)
        + `terms_accepted`: true (required, boolean) - a felhasználó elfogadja-e a terms and conditions-t
            
+ Response 200 (application/json)

    + Body
        
            {
                "token": "auth token",
            }


            
+ Response 201 (application/json)

    + Body
        
            {
                "token": "auth token",
            }
            
            
### Disconnect [DELETE]

+ Response 200 (application/json)

## USER  [/user]

### List [GET]

+ Response 404 (application/json)
+ Response 200 (application/json)

    + Attributes(UserPager)
    
### Create [POST]

+ Request (application/json)

    + Body
    
            {
                "first_name": "Béla" (required, string),
                "last_name": "Kovács" (required, string),
                "email": "elek.teszt@example.org" (required, string),
                "password": "newpasword" (required, string),
                "newsletter": 1 (required, number)
            }

+ Response 201

    + Body

            {
                "token": "auth token"
            }
    
## USER Details [/user/{id}]

+ Parameters
    + id (required, number, `1`) - User ID or me

### Show [GET]

+ Response 200 (application/json)

    + Attributes(User)
    
### Edit [PUT]

+ Request (application/json)

    + Body
    
            {
                "first_name": "Béla" (string),
                "last_name": "Kovács" (string),
                "email": "elek.teszt@example.org" (string),
                "password": "newpasword" (optional, string)
            }

+ Response 200 (application/json)

    + Attributes(UserPager)
## USER ADDRESS [/user/{user_id}/address]

+ Parameters
    + user_id (required, number, `1`) - User ID or `me`

### List [GET]

+ Response 200 (application/json)

    + Attributes(AddressPager)
    
### Create [POST]

+ Request (application/json)

    + Attributes
        + title: `Budapesti címem` (required, string) - Felhasználó által szabadszavasan megadott elnevezés, csak azonosításra való (hogy a felhasználó könnyebben megismerje ezt a címet)
        + country: `Magyarország` (required, string) - szabadszavas
        + county: `Pest megye` (optional, string) - szabadszavas
        + city: `Budapest` (required, string) - szabadszavas
        + address: `Fő utca 12. 3. em 2. ajtó` (required, string) - szabadszavas utca/házszám/emelet/ajtó
        + zip_code: `1234` (required, string) - szabadszavas 
        + customer_name: `Kovács Dezső` (required, string) - szabadszavas személy vagy cégnév
        + vat: `HU123123123` (optional, string) - szabadszavas adószám (ha cégről van szó)
        + phone_number: `+36 30 123 4567` (required, string) - szabadszavas
        + `is_default_shipping`: false (optional, boolean) - ezt a címet használja-e a felhasználó alapértelmezett szállítási címnek? default: false
        + `is_default_billing`: false (optional, boolean) - ezt a címet használja-e a felhasználó alapértelmezett számlázási címnek? default: false
        

+ Response 404 (application/json)
+ Response 201 (application/json)

    + Attributes(Address)

### Show [GET /user/{user_id}/address/{id}]

+ Parameters
    + user_id (required, number, `1`) - User ID or me
    + id (required, number, `1`) - Address ID

+ Response 404 (application/json)
+ Response 200 (application/json)

    + Attributes(Address)

### Edit [PUT /user/{user_id}/address/{id}]

Egy meglevő cím módosítása.

+ Parameters
    + user_id (required, number, `1`) - User ID or me
    + id (required, number, `1`) - Address ID

+ Request (application/json)

    + Attributes
        + title (required, string)
            
+ Response 401 (application/json)

    + Body
    
            {
                
            }

+ Request (application/json)
    + Headers
    
            Authorization: Bearer someotheruserstoken
            
    + Attributes
        + title (required, string)
            
+ Response 403 (application/json)

    + Body
    
            {
                
            }

+ Request (application/json)
    + Headers

            Authorization: Bearer usertoken
        
    + Attributes
        + title (required, string)
            
+ Response 404 (application/json)

    + Body
    
            {
                
            }

+ Request (application/json)
    + Headers

            Authorization: Bearer usertoken
        
    + Attributes
        + title (required, string)
            
+ Response 422 (application/json)

    + Body
    
            {
                
            }

+ Request (application/json)
    + Headers

            Authorization: Bearer usertoken
        
    
    + Body
    
            {
                "title" : "Budapesti cimem",
                "country" : "Magyarország",
                "county" : "Pest megye",
                "city" : "Budapest",
                "street" : "Fő utca 12. 3. em 2. ajtó",
                "zip_code" : "2345",
                "customer_name" : "Kovács Dezső vagy Cégnév kft.",
                "vat" : "HU12313133",
                "phone_number" : "+36 30 123 4567",
                "is_default_shipping" : false,
                "is_default_billing" : false
            }
            
+ Response 201 (application/json)

    + Attributes(Address)

### Delete [DELETE /user/{user_id}/address/{id}]

+ Parameters
    + user_id (required, number, `1`) - User ID or me
    + id (required, number, `1`) - Address ID

+ Response 204
## USER REVIEW [/user/{id}/review]

+ Parameters
    + id (required, number, `1`) - User ID or me

### List [GET]

+ Response 200 (application/json)

    + Attributes(ReviewPager)
    
### Create [POST]

+ Request (application/json)

    + Body
    
            {
                "product": {
                    "id": 3232 (number)
                },
                "rating": 4 (number),
                "comment": "This is a review comment" (string)
            }

+ Response 404 (application/json)
+ Response 201 (application/json)

    + Attributes(Review)

## USER ORDER [/user/{id}/order]

+ Parameters
    + id (required, number, `1`) - User ID or me

### List [GET]

+ Response 200 (application/json)

    + Attributes(OrderPager)

## USER ORDER ITEM [/user/{user_id}/order/{order_id}/item]

+ Parameters
    + user_id (required, number, `1`) - User ID or me
    + order_id (required, number, `1`) - Order ID or current

### List [GET]

+ Response 404 (application/json)
+ Response 200 (application/json)

    + Attributes(OrderItemPager)

### Create / Add To Cart [POST]

+ Request (application/json)

    + Body
    
            {
                "product": {
                    "id": 3232 (number)
                },
                "quantity": 1 (optional, string),
                "product_option": {
                    "id" : 1,
                    "slug" : "size"
                    "value" : "42"
                }
            }

+ Response 404 (application/json)
+ Response 201 (application/json)

    + Attributes(OrderItem)

## USER ORDER ITEM Details [/user/{user_id}/order/{order_id}/item/{id}]

+ Parameters
    + user_id (required, number, `1`) - User ID or me
    + order_id (required, number, `1`) - Order ID or current
    + id (required, number, `1`) - OrderItem ID

### Show [GET]

+ Response 200 (application/json)

    + Attributes(OrderItem)
    
### Edit [PUT]

+ Request (application/json)

    + Body
    
            {
                "quantity": 2 (number)
            }

+ Response 404 (application/json)
+ Response 200 (application/json)

    + Attributes(OrderItem)
    
### Delete [DELETE]

+ Response 404 (application/json)
+ Response 200 (application/json)


## ORDER [/order]

### List [GET]

+ Response 200 (application/json)

    + Attributes(OrderPager)

## ORDER Details [/order/{id}]

+ Parameters
    + id (required, number, `1`) - Order ID or current

### Show [GET]

+ Response 200 (application/json)

    + Attributes(Order)

## ORDER ITEM [/order/{id}/item]

+ Parameters
    + id (required, number, `1`) - Order ID or current

### List [GET]

+ Response 404 (application/json)
+ Response 200 (application/json)

    + Attributes(OrderItemPager)

## ORDER ITEM Details [/order/{order_id}/item/{id}]

+ Parameters
    + order_id (required, number, `1`) - Order ID or current
    + id (required, number, `1`) - OrderItem ID

### Show [GET]

+ Response 200 (application/json)

    + Attributes(OrderItem)

### Edit [PUT]

+ Request (application/json)

    + Body
    
            {
                "quantity": 2 (number),
                "title": "Air Max" (string)
            }

+ Response 404 (application/json)
+ Response 200 (application/json)

    + Attributes(OrderItem)

### Delete [DELETE]

+ Response 404 (application/json)
+ Response 200 (application/json)

## PRODUCT [/product{?search,page,per_page,order_by,order_by_direction}]

+ Parameters
    + search (optional, string, `air`) - Keyword
    + page (optional, number, `1`) - Requested Page Number
    + per_page (optional, number, `15`) - How many items per page
    + order_by (optional, string, `title`) - Product sort key 
    + order_by_direction (optional, string, `desc`) - Product order direction ascendant "asc" or descendant "desc"

### List / Search [GET]

+ Response 200 (application/json)

    + Attributes(ProductPager)

## PRODUCT Details [/product/{id}]

+ Parameters
    + id (required, number, `1`) - Product ID

### Show [GET]

+ Response 200 (application/json)

    + Attributes(Product)
## PRODUCT REVIEW [/product/{id}/review]

+ Parameters
    + id (required, number, `1`) - Product ID

### List [GET]

+ Response 200 (application/json)

    + Attributes(ReviewPager)
    
# Data Structures

## Pager

+ total: 4 (number)
+ per_page: 15 (number)
+ current_page: 1 (number)
+ last_page: 1 (number)
+ from: 1 (number)
+ to: 2 (number)

## UserPager (object)
+ Include Pager
+ data: User, User (array[User])

## OrderPager (object)

+ Include Pager
+ data: Order, Order (array[Order])

## OrderItemPager (object)

+ Include Pager
+ data: OrderItem, OrderItem (array[OrderItem])

## AddressPager (object)

+ Include Pager
+ data: Address, Address (array[Address])

## ReviewPager (object)

+ Include Pager
+ data: Review, Review (array[Review])

## ProductPager (object)

+ Include Pager
+ data: ProductListItem, ProductListItem (array[ProductListItem])

## User (object)

+ id: 11212 (number)
+ first_name: `Teszt` (string)
+ last_name: `Elek` (string)
+ email: `elek.teszt@example.org` (string)
+ `email_confirmed_at`: `2017-01-01 01:01:01` (string)

## Review (object)

+ id: 1232 (number)
+ rating: 4 (number)
+ comment: `This is the best shoes ever` (string)
+ created_at: `2017-03-12T12:12:12` (string)

## Address (object)

+ id: 1232 (number)
+ title: `Budapesti cimem` (string)
+ country: `Magyarország` (string)
+ county: `Pest megye` (string)
+ city: `Budapest` (string)
+ street: `Fő utca 12. 3. em 2. ajtó` (string)
+ zip_code: `2345` (string)
+ customer_name: `Kovács Dezső vagy Cégnév kft.` (string)
+ vat: `HU12313133` (string)
+ phone_number: `+36 30 123 4567` (string)
+ is_default_shipping: false (boolean)
+ is_default_billing: false (boolean)

## ShippingAddress (object)

+ Include Address

## BillingAddress (object)

+ Include Address

## ShippingMethod (object)
+ slug: `gls`
+ title: `GLS futárszolgálat`
+ description: `Gyors, pontos, megbízható`
+ price
    + Include PriceDetail
    
## PaymentMethod (object)
+ slug: `card`
+ title: `Bankkártyás fizetés`
+ description: `Mastercard, Visa, Maestro`
+ price
    + Include PriceDetail

## Price (object)

+ title: 10 (number)
+ value: `10 Ft` (string)

## DiscountPrice (object)

+ net
    + Include Price
+ full
    + Include Price

## NormalPrice (object)

+ net
    + Include Price
+ full
    + Include Price

## TotalPrice (object)

+ net
    + Include Price
+ full
    + Include Price

## TaxPrice (object)

+ net
    + Include Price
+ full
    + Include Price

## PriceDetail

+ discount
    + Include DiscountPrice
+ normal
    + Include NormalPrice
+ total
    + Include TotalPrice
+ tax
    + Include TaxPrice

## ProductAttribute (object)

+ id: 111 (number)
+ slug: `color` (string)
+ title: `Szín` (string)
+ position: 1 (number)
+ value: `Fekete` (string) 

## ProductAttributeSet (object)

+ id: 111 (number)
+ slug: `cipo` (string)
+ title: `Cipő` (string)
+ attributes: ProductAttribute, ProductAttribute (array[ProductAttribute])

## Product (object)

+ id: 111 (number)
+ sku: `4234hgh` (string)
+ title: `Air Max` (string)
+ description: `Air Max description` (string)
+ attributeSet: ProductAttribute, ProductAttribute (array[ProductAttribute])
+ options: ProductOption (array[ProductOption])
+ price
    + Include PriceDetail
+ `can_be_ordered`: true (boolean)
+ `cannot_be_ordered_because`
    + `only_as_bundle`: true (boolean)
    
## ProductListItem (object)

+ id: 123 (number)
+ title: `Air Max kezdő csomag` (string)
+ description: `Air Max kezdő csomag description` (string)
+ price
    + Include PriceDetail
+ products: Product, Product (array[Product])
+ `can_be_ordered`: false (boolean)
+ `cannot_be_ordered_because`
    + `only_as_individual_product`: true (boolean)

## ProductOption (object)

+ id: 111 (number)
+ slug: `size` (string)
+ title: `Size` (string)
+ value: `42` (string)

## ProductOptionGroup (object)
+ slug: `size` (string)
+ title: `Méret` (string)
+ ui_type: `select_one` (string)

## ImageThumbnails (object)
+ sizes
    + small
        + Include ImageThumbnailSize
    + medium
        + Include ImageThumbnailSize
    + large
        + Include ImageThumbnailSize
+ `is_placeholder`: false (boolean)

## ImageThumbnailSize (object)
+ `thumbnail_uri`: `https://fakeimg.pl/300/` (string)
+ `thumbnail_size`
    + `width`: `0` (number)
    + `height`: `0` (number)

## OrderItemUnit (object)

+ id: 111 (number)
+ title: `Air Max` (string)
+ options: ProductOption (array[ProductOption])
+ price
    + Include PriceDetail

## OrderItem (object)

+ id: 11212 (number)
+ title: `Air Max` (string)
+ quantity: 2 (number)
+ units: OrderItemUnit, OrderItemUnit (array[OrderItemUnit])
+ price
    + Include PriceDetail

## Order (object)

+ id: 11212 (number)
+ customer 
    + Include User
+ items: OrderItem, OrderItem, OrderItem (array[OrderItem])
+ status: `cart` (string)
+ customer_note: `This is a comment` (optional, string)
+ is_abandoned: false (boolean)
+ is_guest_customer: false (boolean)
+ total_quantity: 10 (number)
+ price
    + Include PriceDetail
+ shipping_method (optional)
    + Include ShippingMethod
+ payment_method (optional)
    + Include PaymentMethod
+ shipping_address (optional)
    + Include ShippingAddress
+ billing_address (optional)
    + Include BillingAddress